
// configDotenv();

// import dotenv from "dotenv";
// import express from "express";
// import cors from "cors";
// import { createServer } from "http";
// import { Server } from "socket.io";
// dotenv.config();

// const app = express();
// const server = createServer(app);
// const io = new Server(server);

// // Enable CORS for all routes
// app.use(cors());

// // Define your socket.io connection logic
// io.on("connection", (socket) => {
//   console.log("A client connected.");
//   io.emit("welcome__message", "What's Your name!");

//   socket.on("disconnect", () => {
//     console.log("A client disconnected.");
//   });
// });

// const PORT = 9000;
// server.listen(PORT, () => {
//   console.log(`Server is running on port ${PORT}`);
// });

// import dotenv from "dotenv";
// import express from "express";
// import cors from "cors";
// import { createServer } from "http";
// import { Server } from "socket.io";

// dotenv.config();

// const app = express();
// const server = createServer(app);
// const io = new Server(server);

// // Enable CORS for all routes
// app.use(cors());

// // Define your socket.io connection logic
// io.on("connection", (socket) => {
//   console.log("A client connected.");
//   io.emit("welcome__message", "What's Your name!");

//   socket.on("disconnect", () => {
//     console.log("A client disconnected.");
//   });
// });

// const PORT = process.env.PORT || 9000;
// server.listen(PORT, () => {
//   console.log(`Server is running on port ${PORT}`);
// });

// const x = router.route("/x").get((r, s) => {
//   s.status(200).json([0, 1, 2, 3, 4, 5]);
// });

// app.use(x);
// app.use(controller.test);
// app.use("/api", controller.test);
// controller.test();

// const router = express.Router();
// const controller = new Controller();

// const router = express.Router();
// const expressApp = express();

//   static testRoute() {
//     router.route("/test").get(function (request, response) {
//       const sendResponse = {
//         message: "How Are You!",
//         request: request.query,
//       };

//       response.status(200).json(sendResponse);
//       io.emit("test__api", sendResponse);
//     });

//     return router;
//   }

  // console.log(netAddress.filter(address=> address.startsWith('192.168')))
  
  // const netAddress = new Array(); 
  
  // Object.values(nets).map(function(net){
  //   if(Array.isArray(net)){
  //      net.map(netData => netAddress.push(netData.address))
  //   }
  // });
        // netAddress.push(netData.address.startsWith('192.168'));



-----BEGIN CERTIFICATE-----MIIELDCCAxSgAwIBAgISA8u0XGKoaRFQ20AQ3qYuoeHqMA0GCSqGSIb3DQEBCwUAMDIxCzAJBgNVBAYTAlVTMRYwFAYDVQQKEw1MZXQncyBFbmNyeXB0MQswCQYDVQQDEwJSMzAeFw0yNDAzMDgwOTExMzdaFw0yNDA2MDYwOTExMzZaMCAxHjAcBgNVBAMTFWVzcDMyLnN5ZWRhbWlyYWxpLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABCprQiGPbJwI7zguP6K7+XAQxsz92Kj7pP0OIN0Rwu6O3T6CUKamPiW4F1aQ676mDnW3clCVkdrDKE60cESfmdqjggIXMIICEzAOBgNVHQ8BAf8EBAMCB4AwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFAaN1tq0k7VZ4/umJXxMsCxYGdeOMB8GA1UdIwQYMBaAFBQusxe3WFbLrlAJQOYfr52LFMLGMFUGCCsGAQUFBwEBBEkwRzAhBggrBgEFBQcwAYYVaHR0cDovL3IzLm8ubGVuY3Iub3JnMCIGCCsGAQUFBzAChhZodHRwOi8vcjMuaS5sZW5jci5vcmcvMCAGA1UdEQQZMBeCFWVzcDMyLnN5ZWRhbWlyYWxpLmNvbTATBgNVHSAEDDAKMAgGBmeBDAECATCCAQQGCisGAQQB1nkCBAIEgfUEgfIA8AB2AEiw42vapkc0D+VqAvqdMOscUgHLVt0sgdm7v6s52IRzAAABjh2L/IAAAAQDAEcwRQIhAPF+vpEjsEDFjsvrBzJvkHcoTy4aaDiTlzAedsIMqI4ZAiAuJ9Cb8JtRcrl3v+P9jz11+/xeKMwopfTTzeh6jtKUwwB2ADtTd3U+LbmAToswWwb+QDtn2E/D9Me9AA0tcm/h+tQXAAABjh2L/IAAAAQDAEcwRQIgVRqPxumIqIoemrEDirhDyFqlfOVyQfy+UgROiHn6dgoCIQDza5NPq3HW48IHWh4Op6QYVrDU4GW/IYJp/IXH5N0K0DANBgkqhkiG9w0BAQsFAAOCAQEAllTbd/iZp30w9TJpa1dxs7kexOGkvBjpYtz0J9hmnrf83j0QxfFgAlBBr79TMzU9IwvK91R09mGu08yO+2Zr6C4ZqUbqHdFanMNZ1F6XYKzaSRlVAxKWq+ZXMcRTEoIHmXjLr3XX1dqPY2PfPJbeo4z9siWk8yV/PyutLUTE99qTnLh7e6QztMXqi1vcQqL+V1zW9cAARamBfHfwsHYh7jzb0R7twqeve4ebfkOJN1ZiesJ8Knq3QypPvD2+yKgZIXOhTcuTx1LETZOjIoRC2K0f6ipfqQEY6DuOpzs0imzG0bR6CT+iu70cIpx48+nXwjqVCbUsd8Z1qOSV1OLwYg==-----END CERTIFICATE-----


	//$signature = $signature ?? (isset($headers['X-Signature']) ? $headers['X-Signature'] : null);
  	//$auth_key = $auth_key ?? (isset($headers['Auth-Key']) ? $headers['Auth-Key'] : null);
  	//echo json_encode(['signature'=> $signature, 'X-Signature'=> $headers['X-Signature'], 'auth_key'=> $$auth_key, 'headers'=> $headers ]); exit;

    // #include <WiFi.h>
// #include <HTTPClient.h>
// #include <ArduinoJson.h>
 
// // #define WiFi_SSID "SYED AMIR ALI"
// // #define WiFi_PASSWORD "01817807594"
 
// #define WiFi_SSID "Syed Amir Ali"
// #define WiFi_PASSWORD "syedamirali"

// const char* INITIAL_API_URL = "https://esp32.syedamirali.com/";
// String apiUrl;

// void setup() { 
//   Serial.begin(115200);
//   delay(1000);

//   WiFi.begin(WiFi_SSID, WiFi_PASSWORD);

//   Serial.print("Connecting to WiFi ");
//   while(WiFi.status() != WL_CONNECTED){
//     delay(1000);
//     Serial.print(".");
//   }
//   Serial.println("WIFI Connected on ");
//   Serial.print(WiFi_SSID);
//   sendGetRequest();
// }

// void loop() {  
//   if(!apiUrl || apiUrl == ""){
//     Serial.println("INITIAL_API_REQUEST_SENDED!");
//     sendGetRequest();
//   }else{
//     Serial.print("API_URL => ");
//     Serial.println(apiUrl);
//   }


//   delay(1000);
// }

// void sendGetRequest() {
//   if (WiFi.status() == WL_CONNECTED) {
//     HTTPClient http; 
    
//     http.begin(INITIAL_API_URL);
//     // Send GET request
//     int httpResponseCode = http.GET();

//     if (httpResponseCode > 0) {
//       Serial.print("HTTP Response code: ");
//       Serial.println(httpResponseCode);

//       // Print response body
//       String response = http.getString();
      
//       DynamicJsonDocument doc(1024);
//       DeserializationError error = deserializeJson(doc, response);

//       if(error){
//         Serial.print("Parsing failed: ");
//         Serial.println(error.c_str());
//         return;
//       }

//       apiUrl = doc["apiUrl"];

//       Serial.println("Response: " + response);
//     } else {
//       Serial.print("Error code: ");
//       Serial.println(httpResponseCode);
//     }

//     // Free resources
//     http.end();
//   }
// }

 
21:29:45.629 -> Found device: 74:8e:12:35:f1:1b
21:29:45.629 -> Receiver MAC: 74:8e:12:35:f1:1b 
21:33:34.587 -> Found device: 4b:fb:c8:4a:fc:4f
21:33:34.587 -> Receiver MAC: 4b:fb:c8:4a:fc:4f